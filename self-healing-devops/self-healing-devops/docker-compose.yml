version: "3.8"

networks:
  mon:

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8080:80"
    networks: [mon]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s

  blackbox:
    image: prom/blackbox-exporter:latest
    container_name: blackbox
    command: ["--config.file=/etc/blackbox_exporter/config.yml"]
    volumes:
      - ./blackbox/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    ports:
      - "9115:9115"
    networks: [mon]

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8081:8080"
    networks: [mon]

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=2d"
    ports:
      - "9090:9090"
    depends_on:
      - blackbox
      - cadvisor
    networks: [mon]

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
    ports:
      - "9093:9093"
    depends_on:
      - prometheus
    networks: [mon]

  webhook:
    build: ./webhook
    container_name: webhook
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./ansible:/ansible
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "5001:5001"
    depends_on:
      - alertmanager
    networks: [mon]